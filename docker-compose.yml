version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    hostname: zookeeper
    container_name: zookeeper
    ports:
     - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: none

  broker:
    image: confluentinc/cp-kafka:7.4.4
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
#      the existence of the topic "test-topic" will make the broker healthy,
#      all services that  depend on the broker healthcheck, will not run until it becomes healthy
      test: [ "CMD", "kafka-topics", "--describe", "--topic", "test-topic", "--bootstrap-server", "broker:9092"]
      interval: 5s
      timeout: 15s
      retries: 15
    logging:
      driver: none

    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # Start Kafka broker
      /etc/confluent/docker/run &

      # Wait for Kafka to be ready
      while ! kafka-topics --bootstrap-server broker:29092 --list; do
        sleep 1
      done

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic test-topic --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list

      # Keep the container running
      wait
      "